generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  GUEST
}

enum BookingStatus {
 PENDING
 CANCELLED
 CONFIRMED
}

enum PaymentStatus {
 ACCEPTED
 REFUSED
 PENDING
}

model User {
  id String @id @default(uuid()) @db.Uuid
  role Role @default(USER)
  email String @unique @db.VarChar(60)
  firstname String? @db.VarChar(30)
  lastname String? @db.VarChar(30)
  password String? @db.VarChar(255)
  createdAt DateTime? @default(now())
}

model Session {
  id String @id
  sid String @unique
  data String
  expiresAt DateTime
}
//
//model Booking {
//  id Int @id @default(autoincrement())
//  userId Int
//  user User @relation(fields: [userId], references: [id])
////  bookingStatusId BookingStatus
////  bookingStatus BookingStatus @relation(fields: [bookingStatusId], references: [id])
//  createdAt DateTime @default(now())
//}

//model Room {
//  id Int @id @default(autoincrement())
//  label String
//  nbSeats Int
//}
//
//model Seat {
//  id Int @id @default(autoincrement())
//  label String
//  roomId Int
//  room Room @relation(fields: [roomId], references: [id])
//}

model Film {
  id Int @id @default(autoincrement())
  title String
  overview String
  release_date String
  vote_average Float
  vote_count Int
  original_language String
  media_type String
  adult Boolean
}

